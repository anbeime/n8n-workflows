{
  "createdAt": "2025-06-07T08:36:28.513Z",
  "updatedAt": "2025-06-10T13:08:26.000Z",
  "id": "d5J3sHMPNqK3AK0m",
  "name": "YouTube Lead Scraper Automation",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/actor-tasks/YOUR_TASK_ID/run-sync",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "apify_api_QDWh87d0qvJC2eMcY6aNR6VkZlbB6W119yM8"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"input\": {\n    \"searchKeywords\": [\n      \"fitness\"\n    ],\n    \"maxResults\": 10,\n    \"scrapeEmails\": true\n  }\n}",
        "options": {}
      },
      "id": "d1b6c1e9-0b42-4e08-8225-59cbc136fa39",
      "name": "Trigger Apify Scraper",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1040,
        840
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {},
      "id": "f29f4f3c-63be-41a9-89b3-1b56dc070666",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1260,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/datasets/{{ $json.data.defaultDatasetId }}/items",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "apify_api_QDWh87d0qvJC2eMcY6aNR6VkZlbB6W119yM8"
            },
            {
              "name": "clean",
              "value": "true"
            },
            {
              "name": "format",
              "value": "json"
            }
          ]
        },
        "options": {}
      },
      "id": "e9a4ad1a-b2f2-4fb0-ab46-48d03f80887d",
      "name": "Get Apify Results",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -820,
        840
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "01c29690-9b43-41c5-9b88-a587c7e1e4b9",
              "name": "channelTitle",
              "type": "string",
              "value": "={{ $json.channelTitle }}"
            },
            {
              "id": "9ad0d2f1-5bb8-4af0-8633-a45a1ec36c20",
              "name": "email",
              "type": "string",
              "value": "={{ $json.email }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0ce7ee04-21c4-4cac-ab49-85f130ba141a",
      "name": "Extract Email & Channel",
      "type": "n8n-nodes-base.set",
      "position": [
        -480,
        840
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "94741b49-6e09-438a-8de1-1b67379ba0c5",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.email }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "4d4b94ad-0489-444d-bfb7-ab821eb1c84d",
      "name": "Email Exists?",
      "type": "n8n-nodes-base.if",
      "position": [
        -260,
        840
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "=https://api.zerobounce.net/v2/validate?api_key=YOUR_API_KEY&email={{ $json.email }}",
        "options": {}
      },
      "id": "7bd42d93-1f5c-498b-b01d-3f0872d033c5",
      "name": "Verify Email (ZeroBounce)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        60,
        720
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "d17ab221-1aea-4c4a-9ce0-923ef4a67585",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.status }}",
              "rightValue": "=valid"
            }
          ]
        },
        "options": {}
      },
      "id": "1f9e117e-c65a-454a-b4e5-28659ba4b9e9",
      "name": "Email is Valid?",
      "type": "n8n-nodes-base.if",
      "position": [
        280,
        720
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "sendTo": "={{ $json.address }}",
        "subject": "=Love your channel, {{ $('Email Exists?').item.json.channelTitle }} ‚Äì Quick idea!",
        "message": "=Hi,\n\nI just checked out your YouTube channel ‚Äì awesome content on home workouts!  I'm reaching out because we help fitness creators like you grow their email lists and monetize content with premium guides and courses ‚Äì with no up-front cost.  Would you be open to a quick chat next week? I‚Äôd love to show you a couple of ways we could help.\n\nBest Alex",
        "options": {}
      },
      "id": "559b67ed-2c7b-46f9-b575-3d870a3d247c",
      "name": "Send Cold Email",
      "type": "n8n-nodes-base.gmail",
      "position": [
        620,
        600
      ],
      "webhookId": "49cb665d-3716-4588-a079-9b3b55a5fb87",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "BmcAAKceln6nG6on",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## üîÅ SECTION 1: **Start & Scrape YouTube Data**\n\n### üü¢ **Nodes Involved**\n\n* ‚ö° `Manual Trigger`\n* üåê `Trigger Apify Scraper`\n* üåê `Get Apify Results`\n\n---\n\n### ‚ú® What This Section Does\n\n|Step                      |  Description                                                                                                                   |\n| ---------------------------- | -------------------------------------------------------------------------------------------------------------------------------- |\n| **Manual Trigger**         | Starts the workflow manually (great for testing or on-demand runs).                                                              |\n| **Trigger Apify Scraper** | Sends a `POST` request to Apify to run the YouTube Scraper Actor with your target keywords like `\"fitness\"` or `\"tech\"`.         |\n| **Get Apify Results**     | Waits for the scrape to complete and then fetches the dataset containing YouTube channel details, including emails if available. |\n\n### üì¶ Output Example:\n\n```json\n{\n  \"channelTitle\": \"FitLife Hacks\",\n  \"channelUrl\": \"https://youtube.com/@fitlifehacks\",\n  \"email\": \"contact@fitlifehacks.com\"\n}\n```\n\n---\n\n",
        "height": 900,
        "width": 660,
        "color": 5
      },
      "id": "eb5a93b5-2335-4bf5-b191-147cd458be28",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1320,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "3ece9b20-c2de-4331-86a4-5ac272f1b81a",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        60,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "cabeb42d-934e-4aba-ae72-ee57920fbcb6",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        640,
        900
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üîé SECTION 2: **Filter & Prepare Leads**\n\n### üü¢ **Nodes Involved**\n\n* üßÆ `Extract Email & Channel`\n* üö¶ `Email Exists?`\n\n---\n\n### ‚ú® What This Section Does\n\n| üîß Step                        | üßæ Description                                                                                |\n| ------------------------------ | --------------------------------------------------------------------------------------------- |\n|  **Extract Email & Channel** | Uses the `Edit Fields` node to isolate the fields you need: `email` and `channelTitle`.       |\n|  **Email Exists?**           | An `IF` node that checks if `email` is not empty. Only leads with actual emails move forward. |\n\n### üß† Why This Matters:\n\nFiltering out empty emails ensures you don‚Äôt waste verification API calls or try to email blanks.\n\n---\n\n",
        "height": 880,
        "width": 420,
        "color": 3
      },
      "id": "f231f89c-09c0-401e-82ea-3ab7ce1d49b7",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -540,
        180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‚úÖ SECTION 3: **Verify Emails via ZeroBounce**\n\n### üü¢ **Nodes Involved**\n\n* üåê `Verify Email (ZeroBounce)`\n* üö• `Email is Valid?`\n\n---\n\n### ‚ú® What This Section Does\n\n| üîß Step                          | üßæ Description                                                                                             |\n| -------------------------------- | ---------------------------------------------------------------------------------------------------------- |\n| üåê **Verify Email (ZeroBounce)** | Sends an API request to ZeroBounce to check if the email is `valid`, `catch-all`, `invalid`, `abuse`, etc. |\n| üö• **Email is Valid?**           | An `IF` node filters out only those emails where the verification result is `\"valid\"` (or safe to send).   |\n\n### ‚úÖ Output Example:\n\n```json\n{\n  \"status\": \"valid\",\n  \"email\": \"contact@fitlifehacks.com\"\n}\n```\n\n---\n\n",
        "height": 920,
        "width": 400,
        "color": 6
      },
      "id": "ea62f10c-adf0-4480-b0fd-67304d38ab3c",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‚úâÔ∏è SECTION 4: **Send Cold Email**\n\n### üü¢ **Nodes Involved**\n\n* üìß `Send Cold Email` (Gmail)\n\n---\n\n### ‚ú® What This Section Does\n\n|  Step           |  Description                                                                                                         |\n| ----------------- | ---------------------------------------------------------------------------------------------------------------------- |\n|  **Gmail Node** | Sends a customized cold email to the lead using Gmail. You can personalize the email using fields like `channelTitle`. |\n\n---\n",
        "height": 680,
        "width": 260,
        "color": 7
      },
      "id": "bc728e84-8a71-4ad4-9f1a-f927316d0670",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        540,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "=======================================\n            WORKFLOW ASSISTANCE\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n=======================================\n",
        "height": 320,
        "width": 1300,
        "color": 4
      },
      "id": "6e41e5bf-021d-4fd1-928c-3569fe24dd5c",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2980,
        180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# üß† YouTube Lead Scraper Automation ‚Äì n8n Workflow Breakdown\n\nThis automation scrapes YouTube for channels in your niche, extracts emails, validates them, and sends personalized cold emails via Gmail.\n\n---\n\n## üîÅ SECTION 1: **Start & Scrape YouTube Data**\n\n### üü¢ **Nodes Involved**\n\n* ‚ö° `Manual Trigger`\n* üåê `Trigger Apify Scraper`\n* üåê `Get Apify Results`\n\n---\n\n### ‚ú® What This Section Does\n\n| üîß Step                      | üßæ Description                                                                                                                   |\n| ---------------------------- | -------------------------------------------------------------------------------------------------------------------------------- |\n|  **Manual Trigger**         | Starts the workflow manually (great for testing or on-demand runs).                                                              |\n|  **Trigger Apify Scraper** | Sends a `POST` request to Apify to run the YouTube Scraper Actor with your target keywords like `\"fitness\"` or `\"tech\"`.         |\n|  **Get Apify Results**     | Waits for the scrape to complete and then fetches the dataset containing YouTube channel details, including emails if available. |\n\n### üì¶ Output Example:\n\n```json\n{\n  \"channelTitle\": \"FitLife Hacks\",\n  \"channelUrl\": \"https://youtube.com/@fitlifehacks\",\n  \"email\": \"contact@fitlifehacks.com\"\n}\n```\n\n---\n\n## üîé SECTION 2: **Filter & Prepare Leads**\n\n### üü¢ **Nodes Involved**\n\n* üßÆ `Extract Email & Channel`\n* üö¶ `Email Exists?`\n\n---\n\n### ‚ú® What This Section Does\n\n| üîß Step                        | üßæ Description                                                                                |\n| ------------------------------ | --------------------------------------------------------------------------------------------- |\n|  **Extract Email & Channel** | Uses the `Edit Fields` node to isolate the fields you need: `email` and `channelTitle`.       |\n| **Email Exists?**           | An `IF` node that checks if `email` is not empty. Only leads with actual emails move forward. |\n\n### üß† Why This Matters:\n\nFiltering out empty emails ensures you don‚Äôt waste verification API calls or try to email blanks.\n\n---\n\n## ‚úÖ SECTION 3: **Verify Emails via ZeroBounce**\n\n### üü¢ **Nodes Involved**\n\n* üåê `Verify Email (ZeroBounce)`\n* üö• `Email is Valid?`\n\n---\n\n### ‚ú® What This Section Does\n\n| üîß Step                          | üßæ Description                                                                                             |\n| -------------------------------- | ---------------------------------------------------------------------------------------------------------- |\n| üåê **Verify Email (ZeroBounce)** | Sends an API request to ZeroBounce to check if the email is `valid`, `catch-all`, `invalid`, `abuse`, etc. |\n| üö• **Email is Valid?**           | An `IF` node filters out only those emails where the verification result is `\"valid\"` (or safe to send).   |\n\n### ‚úÖ Output Example:\n\n```json\n{\n  \"status\": \"valid\",\n  \"email\": \"contact@fitlifehacks.com\"\n}\n```\n\n---\n\n## ‚úâÔ∏è SECTION 4: **Send Cold Email**\n\n### üü¢ **Nodes Involved**\n\n* üìß `Send Cold Email` (Gmail)\n\n---\n\n### ‚ú® What This Section Does\n\n| üîß Step           | üßæ Description                                                                                                         |\n| ----------------- | ---------------------------------------------------------------------------------------------------------------------- |\n|  **Gmail Node** | Sends a customized cold email to the lead using Gmail. You can personalize the email using fields like `channelTitle`. |\n\n---\n\n### üíå Sample Email Content:\n\n```html\nSubject: Quick idea for {{$json[\"channelTitle\"]}}\n\nHi there,\n\nLoved your channel {{$json[\"channelTitle\"]}}! I had a quick idea on how you could grow your audience and monetize better.\n\nWould love to share ‚Äî open to a quick call next week?\n\nBest,  \n[Your Name]  \n[Your Website]\n```\n\n---\n\n## üéØ Overall Flow Summary\n\n| Section               | Purpose                                                 |\n| --------------------- | ------------------------------------------------------- |\n|  **Start & Scrape** | Launches the Apify scraper and gets lead data           |\n|  **Filter Leads**   | Extracts relevant info and removes leads without emails |\n|  **Verify Emails**   | Checks email validity via ZeroBounce                    |\n|  **Send Emails**    | Sends cold emails to the filtered, verified leads       |\n\n---\n\n## üöÄ Suggestions for Next Level\n\n* ‚è±Ô∏è Add `Wait` or `Delay` nodes to avoid hitting Gmail rate limits\n* üìä Log results to Airtable or Google Sheets\n* üîÅ Loop with batch processing for large lead lists\n* üß† Add AI-generated personalized messages with OpenAI API\n\n---\n\n",
        "height": 3238,
        "width": 1289,
        "color": 4
      },
      "id": "b2973ff3-aa2a-4cea-a638-b2f22a6dd5b1",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2980,
        520
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Email Exists?": {
      "main": [
        [
          {
            "node": "Verify Email (ZeroBounce)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Trigger Apify Scraper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email is Valid?": {
      "main": [
        [
          {
            "node": "Send Cold Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Apify Results": {
      "main": [
        [
          {
            "node": "Extract Email & Channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger Apify Scraper": {
      "main": [
        [
          {
            "node": "Get Apify Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Email & Channel": {
      "main": [
        [
          {
            "node": "Email Exists?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify Email (ZeroBounce)": {
      "main": [
        [
          {
            "node": "Email is Valid?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Verify Email (ZeroBounce)": [
      {
        "json": {
          "city": "Los Angeles",
          "domain": "fitlifehacks.com",
          "gender": "",
          "region": "CA",
          "status": "valid",
          "account": "contact",
          "address": "contact@fitlifehacks.com",
          "country": "US",
          "zipcode": "90001",
          "lastname": "",
          "mx_found": "true",
          "firstname": "",
          "mx_record": "alt1.aspmx.l.google.com",
          "free_email": false,
          "sub_status": "",
          "did_you_mean": "",
          "processed_at": "2025-05-31 10:30:00",
          "smtp_provider": "google.com",
          "domain_age_days": "2650"
        }
      }
    ]
  },
  "versionId": "9d9d85bd-cdcc-4033-b370-911ef5c0c3fe",
  "triggerCount": 0,
  "tags": []
}