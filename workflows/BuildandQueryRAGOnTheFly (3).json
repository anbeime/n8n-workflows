{
  "name": "BuildandQueryRAGOnTheFly",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": true
        }
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -420,
        -300
      ],
      "id": "7c33c6d9-dfb8-40a0-8b1a-c9ee1242d44e",
      "name": "Telegram Trigger",
      "webhookId": "e3613918-86c2-4605-b31b-0d28da649f84",
      "credentials": {
        "telegramApi": {
          "id": "LfQnSJm0YtyRS6XG",
          "name": "X Cypto Bot"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ce8a5cfa-77d6-4d08-8144-d2dfbbdc3487",
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "03873863-ba61-4951-a823-5c8438c8d693",
                    "leftValue": "={{ $json.message.photo }}",
                    "rightValue": "",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "photo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -180,
        -300
      ],
      "id": "d17fcc31-b932-4aeb-aecc-7b13f4fd602c",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        320,
        -300
      ],
      "id": "a151fede-fa66-401f-88c2-2beba3362cf6",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "tHC6Dtlocib5h4Zq",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "text": "Extraact the information from image",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        140,
        0
      ],
      "id": "56e81ec3-6fab-4b7a-93fe-18e65246f585",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "tHC6Dtlocib5h4Zq",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}\n",
        "options": {
          "systemMessage": "=Agent Role:\nYou are a friendly and helpful AI Agent, acting as a knowledge expert representative and AI assistant.\n\nWorkflow:\nFirst, determine whether {{ $json.content }} is a question or a statement:\n\n1. If it is a question:\nSearch for {{ $json.content }} in the Pinecone Vector Store to gather relevant context and extract related information.\nIf no relevant information is found in the Pinecone Vector Store, check the previous chat history for an answer.\nIf the information is still not available, use your own knowledge to respond.\n2. If it is a statement:\nExtract any useful information from {{ $json.content }}.\nAdd this extracted information to Google Docs.\nNotify the user that the information has been successfully added to the \"memory palace.\"\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        900,
        -300
      ],
      "id": "18a37f14-07fc-45f8-b6b0-77a8dda0584f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1520,
        -300
      ],
      "id": "5952a2ba-eeb3-43ad-b0ae-65f26609ad06",
      "name": "Telegram",
      "webhookId": "55c6ddbf-ca50-49bf-8592-bbd896e7f267",
      "credentials": {
        "telegramApi": {
          "id": "LfQnSJm0YtyRS6XG",
          "name": "X Cypto Bot"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "07ae3eac-ab9d-4e43-9463-6de9f890173f",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        -300
      ],
      "id": "66fd7dd4-2483-44e2-8466-4878f642c736",
      "name": "Edit Fields_Audio"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "07ae3eac-ab9d-4e43-9463-6de9f890173f",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        0
      ],
      "id": "c0b82e83-1dd3-4850-9f21-3e0fe1cfecb6",
      "name": "Edit Fields_Image"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "07ae3eac-ab9d-4e43-9463-6de9f890173f",
              "name": "content",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        -560
      ],
      "id": "1cd81b02-e484-4e81-80de-930a51075c0c",
      "name": "Edit Fields_Text"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "AIAgentpapers",
        "toolDescription": "Extract useful information from the Pinecone vector store.",
        "pineconeIndex": {
          "__rl": true,
          "value": "aipapers",
          "mode": "list",
          "cachedResultName": "aipapers"
        },
        "options": {
          "pineconeNamespace": "Anthropic"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        1460,
        80
      ],
      "id": "6d929607-2a3a-4be5-8c4a-fba8b152085d",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "knLyD37plG0jZr9U",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1460,
        220
      ],
      "id": "9afe3e19-daff-44d6-aa8a-493c59425a96",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "tHC6Dtlocib5h4Zq",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Add new information to memory",
        "operation": "update",
        "documentURL": "1bxx3UfRpMrm_D-8Fmg52MAutVeo1hl08fjvtZQpewVE",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $fromAI('memory') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        1180,
        220
      ],
      "id": "3bfae820-d848-43f4-b9fe-cb272e1a71de",
      "name": "Google Docs",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "cuXRfQ4MEUPv03Ms",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "aipapers",
          "mode": "list",
          "cachedResultName": "aipapers"
        },
        "options": {
          "pineconeNamespace": "Anthropic"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        400,
        420
      ],
      "id": "10924192-0993-4f13-9306-28c9d8c59455",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "knLyD37plG0jZr9U",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        340,
        620
      ],
      "id": "a560784c-f3f6-4f46-af49-1ea7fd0c83f8",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "tHC6Dtlocib5h4Zq",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        480,
        620
      ],
      "id": "d68c5300-ff13-453e-9e05-c33f6eabdb6c",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        500,
        780
      ],
      "id": "a1a73aef-5fde-45d2-871e-4a2e921fc830",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -400,
        420
      ],
      "id": "42defa33-f8ac-41bb-bc4b-d566dff7eed6",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "1bxx3UfRpMrm_D-8Fmg52MAutVeo1hl08fjvtZQpewVE"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        -160,
        420
      ],
      "id": "785f215a-6af0-4afd-b445-ae93414042bc",
      "name": "Google Docs1",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "cuXRfQ4MEUPv03Ms",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dc1ac9aa-9d4e-405c-906e-0117be31765f",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        80,
        420
      ],
      "id": "a827357d-3973-49c3-aeb5-15645ea58d26",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "1bxx3UfRpMrm_D-8Fmg52MAutVeo1hl08fjvtZQpewVE",
        "actionsUi": {
          "actionFields": [
            {
              "action": "replaceAll",
              "text": "={{ $json.pageContent }}",
              "replaceText": "\" \""
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        840,
        420
      ],
      "id": "89690c25-9f28-4af2-b1e4-98ac1fd2d960",
      "name": "Google Docs2",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "cuXRfQ4MEUPv03Ms",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        800,
        60
      ],
      "id": "2e0b1517-2d23-46dd-a243-fbf7fdcbf5b7",
      "name": "Deepseek",
      "credentials": {
        "openAiApi": {
          "id": "tHC6Dtlocib5h4Zq",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "### Trigger upon receiving a message, audio, or image.",
        "height": 260,
        "width": 220
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -480,
        -400
      ],
      "id": "6525d4fc-0453-4a9d-8a66-f9c5e8675b71",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "66666",
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        960,
        60
      ],
      "id": "c9a181bd-1a1a-4d5e-82f9-dcada76c2e9f",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "content": "### Route differently based on receiving an image, audio, or text.",
        "height": 260,
        "width": 220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        -400
      ],
      "id": "9a0d2c7b-4018-4b58-bb34-7942abe1d748",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "### Set the 'content' field based on the received input",
        "height": 260,
        "width": 220,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        -660
      ],
      "id": "d1a1aaa1-89cf-4fcf-a182-d3fccfe8826b",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "### Set the 'content' field based on the received input",
        "height": 240,
        "width": 220,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        -380
      ],
      "id": "36f9ffde-7702-448e-9ff7-ba2bc4073a99",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "### Set the 'content' field based on the received input",
        "height": 240,
        "width": 220,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        -80
      ],
      "id": "0f508504-03b7-4c91-bf8f-4d9a7ae1b3a4",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "### Transcribe audio to text.",
        "height": 240,
        "width": 340,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        -380
      ],
      "id": "054108d3-08ab-4307-8646-b807296c3fc0",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "### Extract information from an image.",
        "height": 240,
        "width": 340,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        -80
      ],
      "id": "4a37c0df-46c0-4020-9543-ce2f23f10c0b",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "### This AI Agent acts as a knowledge expert representative and AI Assistant, handling both questions and statements intelligently.\n\nFor Questions:\n1.Determines if the input is a question.\n2.Searches for relevant context in Pinecone Vector Store.\n3.If no relevant information is found, checks previous chat history.\n4.If still unresolved, relies on its own knowledge to provide an answer.\n\nFor Statements:\n1.Extracts useful information from the input.\n2.Stores the extracted information in Google Docs.\n3.Notifies the user that the information has been added to the \"memory palace.\"",
        "height": 520,
        "width": 460,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        820,
        -660
      ],
      "id": "014deec0-2077-4d68-80cf-273e49f21c65",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "### If the user asks a question:\nSearch for relevant knowledge in the vector database.",
        "height": 380,
        "width": 340,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        -20
      ],
      "id": "42f5210b-1e2c-474b-ac12-3078f759d730",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "### If the user provides new information:\nAdd new knowledge to this Google Doc.\n.\nThis Google Doc stores all the memory within one day, and every day at 0:00 (or midnight), it embeds all the information into a vector store.",
        "height": 380,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1120,
        -20
      ],
      "id": "7c5f03aa-35e0-4796-98ea-575084c3df04",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "### Reply to user",
        "height": 200,
        "width": 340,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        -340
      ],
      "id": "66f30d10-77ad-472e-a770-bb96f904b882",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "### Store short time memory",
        "height": 280,
        "width": 200,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        900,
        -20
      ],
      "id": "1502dba0-d6df-482e-89b2-dfe0144a2226",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "### Trigger once a day to embed all info in the Google Doc to the vector database.",
        "height": 260,
        "width": 220
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -460,
        320
      ],
      "id": "1c6320a9-e912-4e36-a453-17c705ac863f",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        140,
        -300
      ],
      "id": "e04641a7-4c2b-4025-a759-933895df7ea3",
      "name": "DownloadAudio",
      "webhookId": "32749c21-9894-41ab-ab05-520c679351cf",
      "credentials": {
        "telegramApi": {
          "id": "LfQnSJm0YtyRS6XG",
          "name": "X Cypto Bot"
        }
      }
    },
    {
      "parameters": {
        "content": "### Get document and extract content",
        "height": 240,
        "width": 420,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -180,
        340
      ],
      "id": "129b74c6-6b35-4e71-bc3b-1f11c5912ade",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "### Embed Google Doc into the vector database.",
        "height": 620,
        "width": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        300,
        340
      ],
      "id": "a8f804b2-06dc-45f4-8d48-c78856b73e81",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "### Empty the Google Doc so we empty the 1-day memory.",
        "height": 280,
        "width": 280,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        780,
        340
      ],
      "id": "402f2478-b447-4445-9516-b171ff7d3d8b",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "# Build and Query Your Vector Database/RAG on the Fly | Self-Learning AI Agent\n### Your AI secretary remembers everything you say and improves itself every day.\nEmail: tianyi.datascience@gmail.com\n",
        "height": 180,
        "width": 900,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -480,
        -1040
      ],
      "id": "dc220ca7-c7cc-4493-93c6-476b58a46522",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "content": "## When You Ask a Question, the AI Follows These Steps to Find an Answer:\n### 1. Search the Vector Store:\nThe AI first looks for relevant information in its Pinecone vector store.\n### 2. Check Chat History:\nIf it doesn't find what it needs in the vector store, it reviews previous conversations to see if the answer has already been discussed.\n### 3. Use Internal Knowledge:\nIf the answer is still not found, the AI relies on its general knowledge to provide a response.\n\n## When You Make a Statement, the AI Will:\n### 1. Extract Information:\nIdentify and capture any useful details or facts from your statement.\n### 2. Store in Google Docs:\nSave the extracted information into a designated Google Document.\n### 3. Notify You:\nConfirm that the information has been successfully added to its \"memory palace.\"",
        "height": 440,
        "width": 900,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -480,
        -860
      ],
      "id": "62da83cc-c28b-477a-b79f-0867072f5776",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "## Every day at 00:00, the information stored in the Google Docs will be embedded into the vector database, and then the Google Docs will be emptied.",
        "height": 340,
        "width": 740,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -480,
        620
      ],
      "id": "e976bdbc-e59b-4dc6-8321-c8055287a5ff",
      "name": "Sticky Note18"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields_Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DownloadAudio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Edit Fields_Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit Fields_Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields_Audio": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields_Image": {
      "main": [
        []
      ]
    },
    "Edit Fields_Text": {
      "main": [
        []
      ]
    },
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Docs": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Docs1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Docs1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "main": [
        [
          {
            "node": "Google Docs2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deepseek": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "DownloadAudio": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6230218c-cb73-48ec-aa0a-da6e6f9ab471",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f638a47e4e563f91fde8b98ed9f5fa6a9faa41a207143e9ce05d85200c905524"
  },
  "id": "k5YYR7a774KfacMW",
  "tags": [
    {
      "createdAt": "2025-01-26T15:21:53.716Z",
      "updatedAt": "2025-01-26T15:21:53.716Z",
      "id": "W7eaE1NVqTisi5k2",
      "name": "RAG"
    }
  ]
}